Byute Force:

class Solution {
    public int[] twoSum(int[] nums, int target) {
        for(int i=0; i<nums.length-1; i++ ){
            for(int j =i+1; j<nums.length; j++ ){
                if( nums[i]+nums[j] == target ){
                    return new int[] { i , j };
                }
            }
        }
        return new int[] {};
    }
}

optimal solution:
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> mp=new HashMap<>();
        for(int i=0;i<nums.length;i++)
            mp.put(nums[i],i);
        for(int i=0;i<nums.length;i++){
            int y=target-nums[i];
            if(mp.containsKey(y) && mp.get(y)!= i)
                return new int[]{mp.get(y),i};
        }
        return new int[] {};
    }
}
